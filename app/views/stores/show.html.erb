<div class="row"   id="home">
    <div class="col-md-8">   
    
     
  <%= link_to image_tag(@store.image.url(:background)), @store.image.url %>
              
    </div>
 </div>    
 

 
  <div> 
   <% @page = @store.pages.find_by(name: 'Home' ) %>
   <% template = Liquid::Template.parse(@page.template) %>
  <%= template.render('store' => @store).html_safe %>
    
  </div> 
    
 


 
 
 
 <% @store.items.each do |item| %>
 
   
<div class="polaroid" >
    <%= link_to image_tag(item.image.url(:large)), item.image.url %>
  
   <div class="container" style="  position:relative ; left:270px ; top:-130px ; padding: 10px 20px;">
        <h2><%= item.name %></h2>
        <p> Price $<%= item.price %> </p>
        <%  if item.inventory %>
            <% if item.quantity !=0 %>
                  <p> Quantity in stock: <%= item.quantity %> </p>
            <% else %> 
                  <h3> SOLD OUT </h3>
            <% end %> 
          
        <% end %>
       
     
        <%=  form_for :item_order, remote: true,  url:store_item_orders_path(@store) do |f|  %> 
          <%= f.hidden_field :item_id, :value => item.id %>
            <%= f.number_field :quantity, :value=> 1, min: 1 , max: max_value(item) %><br>
          <%= f.submit "add to cart", :class => 'btn btn-primary btn-lg' %>
        <% end %>
    
   </div>
 
    
</div>   
   
<% end %> 
  


  
  <div id="about"> 
   <% @page = @store.pages.find_by(name: 'About' ) %>
   <% template = Liquid::Template.parse(@page.template) %>
  <%= template.render('store' => @store).html_safe %>
   
  </div> 
    
 
   
   

 <% @store.links.each do |link| %>
   <h2><%= link.link %></h2>
 <% end %> 
  
  
  <!--<h1>New video</h1>-->


 <!--<video id="video" width="640" height="480" autoplay></video>-->
 <!--  <button id="snap">Snap Photo</button>-->
 <!-- <canvas style= "position: relative; border:solid black 2px;" id="canvas" width="640" height="480"></canvas>-->

  
  
  
  
  
<!--   <div id="map" style="width:600px; height:400px; border: 2px solid black;">-->
<!--    </div>-->
  
    
    
<!--    <script type="text/javascript">-->


<!--function initAutocomplete() {-->
<!--  var map = new google.maps.Map(document.getElementById('map'), {-->
<!--    center: {lat: -33.8688, lng: 151.2195},-->
<!--    zoom: 8,-->
<!--    mapTypeId: google.maps.MapTypeId.ROADMAP-->
<!--  });-->

  <!--// Create the search box and link it to the UI element.-->
<!--  var input = document.getElementById('pac-input');-->
<!--  var searchBox = new google.maps.places.SearchBox(input);-->
  <!--// map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);-->

 
<!--  var markers = [];-->
  <!--// [START region_getplaces]-->
  <!--// Listen for the event fired when the user selects a prediction and retrieve-->
  <!--// more details for that place.-->
<!--  searchBox.addListener('places_changed', function() {-->
<!--    var places = searchBox.getPlaces();-->

<!--    if (places.length == 0) {-->
<!--      return;-->
<!--    }-->

    <!--// Clear out the old markers.-->
<!--    markers.forEach(function(marker) {-->
<!--      marker.setMap(null);-->
<!--    });-->
<!--    markers = [];-->

    <!--// For each place, get the icon, name and location.-->
<!--    var bounds = new google.maps.LatLngBounds();-->
<!--    places.forEach(function(place) {-->
<!--      var icon = {-->
<!--        url: place.icon,-->
<!--        size: new google.maps.Size(71, 71),-->
<!--        origin: new google.maps.Point(0, 0),-->
<!--        anchor: new google.maps.Point(17, 34),-->
<!--        scaledSize: new google.maps.Size(25, 25)-->
<!--      };-->

      <!--// Create a marker for each place.-->
<!--      markers.push(new google.maps.Marker({-->
<!--        map: map,-->
<!--        icon: icon,-->
<!--        title: place.name,-->
<!--        position: place.geometry.location-->
<!--      }));-->

<!--      if (place.geometry.viewport) {-->
        <!--// Only geocodes have viewport.-->
<!--        bounds.union(place.geometry.viewport);-->
<!--      } else {-->
<!--        bounds.extend(place.geometry.location);-->
<!--      }-->
<!--    });-->
<!--    map.fitBounds(bounds);-->
<!--  });-->
  
<!--}-->

<!--    </script>-->
    
    
<!--    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHycBigCaKN6VQqqZBxtjm4Jux_XJ-0Zc&libraries=places&callback=initAutocomplete"-->
<!--         async defer></script>-->

  
<!--  <script>-->
<!--  window.addEventListener("DOMContentLoaded", function() {-->
   <!--Grab elements, create settings, etc.-->
<!--  var canvas = document.getElementById("canvas"),-->
<!--    context = canvas.getContext("2d"),-->
<!--    video = document.getElementById("video"),-->
<!--    videoObj = { "video": true },-->
<!--    errBack = function(error) {-->
<!--      console.log("Video capture error: ", error.code); -->
<!--    };-->

 <!--Put video listeners into place-->
  <!--if(navigator.getUserMedia) { // Standard-->
<!--    navigator.getUserMedia(videoObj, function(stream) {-->
<!--      video.src = stream;-->
<!--      video.play();-->
<!--    }, errBack);-->
  <!--} else if(navigator.webkitGetUserMedia) { // WebKit-prefixed-->
<!--    navigator.webkitGetUserMedia(videoObj, function(stream){-->
<!--      video.src = window.webkitURL.createObjectURL(stream);-->
<!--      video.play();-->
<!--    }, errBack);-->
<!--  }-->
  <!--else if(navigator.mozGetUserMedia) { // Firefox-prefixed-->
<!--    navigator.mozGetUserMedia(videoObj, function(stream){-->
<!--      video.src = window.URL.createObjectURL(stream);-->
<!--      video.play();-->
<!--    }, errBack);-->

<!--  }-->
  
   

<!--Trigger photo take-->
<!--document.getElementById("snap").addEventListener("click", function(e) {-->
<!--  context.drawImage(video, 0, 0, 640, 480);-->
<!--});-->

<!--}, false);-->


<!-- var objects = new tracking.ObjectTracker(-->
<!--    ['face', 'eye', 'mouth']);-->


<!--objects.on('track',function(event) { -->
<!--  if (event.data.length === 0) { -->
    <!--No objects were detected in this frame.-->
<!--  } else { -->
<!--   event.data.forEach(function(rect) { -->
   <!--draw rect.x, rect.y, rect.height, rect.width -->
<!--  });-->
<!-- }-->
<!--});-->


<!--tracking.track('#canvas', objects);-->

<!--</script>-->